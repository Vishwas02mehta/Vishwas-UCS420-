import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

# Q.1
M = float(input("Enter a value for M: "))
x = np.linspace(-10, 10, 400)
y1 = M * x**2
y2 = M * np.sin(x)
plt.plot(x, y1, label=r'$y=Mx^2$', color='blue', linestyle='-', linewidth=2)
plt.plot(x, y2, label=r'$y=M\sin(x)$', color='green', linestyle='--', linewidth=2)
plt.legend()
plt.grid(True)
plt.title(f'Plot of y=Mx^2 and y=Msin(x) for M={M}')
plt.xlabel('x')
plt.ylabel('y')
plt.show()

# Q.2
subjects = ['Math', 'Physics', 'Chemistry', 'Biology', 'English']
scores = [85, 90, 78, 88, 92]
df_scores = pd.DataFrame({'Subject': subjects, 'Score': scores})
plt.figure(figsize=(8, 6))
sns.barplot(x='Subject', y='Score', data=df_scores, palette='Set1')
for i in range(len(df_scores)):
    plt.text(i, df_scores['Score'][i] + 1, str(df_scores['Score'][i]), ha='center', color='black')
plt.title('Subject Scores')
plt.xlabel('Subject')
plt.ylabel('Score')
plt.grid(True)
plt.show()

# Q.3
roll_number = 1234
np.random.seed(roll_number)
data = np.random.randn(50)
fig, axs = plt.subplots(2, 2, figsize=(10, 8))
axs[0, 0].plot(np.cumsum(data), color='blue')
axs[0, 0].set_title('Cumulative Sum')
axs[0, 0].set_xlabel('Index')
axs[0, 0].set_ylabel('Cumulative Sum')
axs[0, 0].grid(True)
axs[0, 1].scatter(range(50), data, color='red')
axs[0, 1].set_title('Random Noise (Scatter)')
axs[0, 1].set_xlabel('Index')
axs[0, 1].set_ylabel('Value')
axs[0, 1].grid(True)
plt.tight_layout()
plt.show()


# Q.4
# Load the provided dataset into a DataFrame
data = {
    'month_number': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
    'facecream': [2500, 2630, 2140, 3400, 3600, 2760, 2980, 3700, 3540, 1990, 2340, 2900],
    'facewash': [1500, 1200, 1340, 1130, 1740, 1555, 1120, 1400, 1780, 1890, 2100, 1760],
    'toothpaste': [5200, 5100, 4550, 5870, 4560, 4890, 4780, 5860, 6100, 8300, 7300, 7400],
    'bathingsoap': [9200, 6100, 9550, 8870, 7760, 7490, 8980, 9960, 8100, 10300, 13300, 14400],
    'shampoo': [1200, 2100, 3550, 1870, 1560, 1890, 1780, 2860, 2100, 2300, 2400, 1800],
    'moisturizer': [1500, 1200, 1340, 1130, 1740, 1555, 1120, 1400, 1780, 1890, 2100, 1760],
    'total_units': [21100, 18330, 22470, 22270, 20960, 20140, 29550, 36140, 23400, 26670, 41280, 30020],
    'total_profit': [211000, 183300, 224700, 222700, 209600, 201400, 295500, 361400, 234000, 266700, 412800, 300200]
}

df = pd.DataFrame(data)

# 1. Line plot showing total profit of all months
plt.figure(figsize=(10, 6))
sns.lineplot(x='month_number', y='total_profit', data=df, marker='o', color='blue')
plt.title('Total Profit for Each Month')
plt.xlabel('Month Number')
plt.ylabel('Total Profit')
plt.grid(True)
plt.show()

# 2. Multiline plot for all product sales
plt.figure(figsize=(10, 6))
sns.lineplot(x='month_number', y='facecream', data=df, label='Facecream', color='green')
sns.lineplot(x='month_number', y='facewash', data=df, label='Facewash', color='orange')
sns.lineplot(x='month_number', y='toothpaste', data=df, label='Toothpaste', color='red')
sns.lineplot(x='month_number', y='bathingsoap', data=df, label='Bathing Soap', color='purple')
sns.lineplot(x='month_number', y='shampoo', data=df, label='Shampoo', color='brown')
sns.lineplot(x='month_number', y='moisturizer', data=df, label='Moisturizer', color='pink')
plt.title('Sales Data for Each Product')
plt.xlabel('Month Number')
plt.ylabel('Sales')
plt.legend()
plt.grid(True)
plt.show()

# 3. Bar plot for all features/attributes
df.drop(columns=['month_number'], inplace=True)
df.plot(kind='bar', figsize=(10, 6))
plt.title('Bar Chart for All Features')
plt.xlabel('Month Number')
plt.ylabel('Sales and Profit Values')
plt.grid(True)
plt.show()
